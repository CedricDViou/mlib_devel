#!/bin/bash

##########################################################################
#                                                                        #
# This is the "startsg" script used to start the CASPER XSG toolflow.    #
#                                                                        #
# Put local definitions in "startsg.local" in the same directory as this #
# file.  The "startsg.local" file should define MATLAB_PATH and          #
# XILINX_PATH environment variables that point to the base directory of  #
# the respective installation directories.  You should define the        #
# XILINX_PLATFORM variable in that file as well.                         #
#                                                                        #
# DO NOT PUT LOCAL CONFIGURATION INFORMATION IN THIS FILE!               #
#                                                                        #
##########################################################################

# Find canonical ("real") directory of this script
SCRIPT_DIR=$(dirname `readlink -e "$0"`)

# Find basename of this script
SCRIPT_BASE=$(basename "$0")

# If local environment file is given, use it, otherwise search for
# a local environment file.  Search order (only when not given!) is
# "./${SCRIPT_BASE}.local" then "${SCRIPT_DIR}/${SCRIPT_BASE}.local".
# Only the first found file is used.
if [ -n "${1}" ]
then
  if ! [ -f "${1}" ]
  then
    echo "Error: local environment file '${1}' not found"
    exit 1
  fi
  LOCALDEFS="${1}"

elif [ -f "./${SCRIPT_BASE}.local" ]
then
  LOCALDEFS="./${SCRIPT_BASE}.local"

elif [ -f "${SCRIPT_DIR}/${SCRIPT_BASE}.local" ]
then
  LOCALDEFS="${SCRIPT_DIR}/${SCRIPT_BASE}.local"
fi

if [ -n "${LOCALDEFS}" ]
then
  echo "Reading local definitions from '${LOCALDEFS}'"
  source "${LOCALDEFS}"
else
  echo "WARNING: Local environment file not found"
fi

# Verify that MATLAB_PATH and XILINX_PATH are reasonable
if ! [ -n "${MATLAB_PATH}" ]
then
  echo "ERROR: MATLAB_PATH is not defined in the current environment."
  exit 1
elif ! [ -d "${MATLAB_PATH}" -a -r "${MATLAB_PATH}" ]
then
  echo "ERROR: MATLAB_PATH '${MATLAB_PATH}' is not a readable directory."
  exit 1
fi

if ! [ -n "${XILINX_PATH}" ]
then
  echo "ERROR: XILINX_PATH is not defined in the current environment."
  exit 1
elif ! [ -d "${XILINX_PATH}" -a -r "${XILINX_PATH}" ]
then
  echo "ERROR: XILINX_PATH '${XILINX_PATH}' is not a readable directory."
  exit 1
fi

if ! [ -n "${XILINX_PLATFORM}" ]
then
  echo "WARNING: XILINX_PLATFORM is not defined in the current environment, assuming 'lin64'."
  export XILINX_PLATFORM=lin64
fi

# If not yet defined, set MLIB_DEVEL_PATH based on canonicalized directory of
# this script.
if ! [ -n "${MLIB_DEVEL_PATH}" ]
then
  export MLIB_DEVEL_PATH="${SCRIPT_DIR}"
fi

# Check that casper_library directory is writable
# (required by downconverter and bus libraries).
if ! [ -w "${MLIB_DEVEL_PATH}/casper_library" ]
then
  echo "ERROR: Directory ${MLIB_DEVEL_PATH}/casper_library is not writable by you."
  exit 1
fi

# Show environment
echo "Using MATLAB_PATH=${MATLAB_PATH}"
echo "Using XILINX_PATH=${XILINX_PATH}"
echo "Using XILINX_PLATFORM=${XILINX_PLATFORM}"
echo "Using MLIB_DEVEL_PATH=${MLIB_DEVEL_PATH}"

# Finish environment setup
source "${XILINX_PATH}/settings64.sh" > /dev/null
export PATH="${PATH}:${XILINX}/ISE/bin/${XILINX_PLATFORM}:${XILINX_PATH}/ISE/sysgen/bin/${XILINX_PLATFORM}"
export XPS_BASE_PATH="${MLIB_DEVEL_PATH}/xps_base"
export MATLAB="${MATLAB_PATH}"

# Set umask to allow group writes
umask 002

# Save start-up directory (if defined, startup.m will cd there)
export CASPER_STARTUP_DIR=`pwd`

# Change into the MLIB_DEVEL_PATH directory
# (so MATLAB will find our startup.m file).
cd "${MLIB_DEVEL_PATH}"

# Start MATLAB
"${MATLAB}/bin/matlab"
