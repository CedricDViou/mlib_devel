#
# Timing Constraints
#
Net sys_clk TNM_NET = sys_clk;
TIMESPEC TS_sys_clk = PERIOD sys_clk 100 MHz;
Net epb_clk TNM_NET = epb_clk;
TIMESPEC TS_epb_clk = PERIOD epb_clk 100 MHz;


#IF# strcmp(get(b,'type'),'xps_xaui') || strcmp(get(b,'type'),'xps_tengbe')# Net mgt_clk TNM_NET = mgt_clk;
#IF# strcmp(get(b,'type'),'xps_xaui') || strcmp(get(b,'type'),'xps_tengbe')# TIMESPEC TS_mgt_clk = PERIOD mgt_clk 157 MHz;

###################Local bufg routing [for roach V0]
NET epb_clk_buf CLOCK_DEDICATED_ROUTE = FALSE;

###################ROACH constraints

#
# System signals
#

NET "sys_clk_n"    LOC = H13;
NET "sys_clk_p"    LOC = J14;

NET "dly_clk_n"    LOC = J17;
NET "dly_clk_p"    LOC = J16;

NET "aux_clk_0_n"  LOC = G16;
NET "aux_clk_0_p"  LOC = G15;
NET "aux_clk_1_n"  LOC = H15;
NET "aux_clk_1_p"  LOC = H14;

#
# PPC External Peripheral Bus [EPB]
#

# transparent endian change
NET "epb_data<15>"   LOC = AD19;
NET "epb_data<14>"   LOC = AF15;
NET "epb_data<13>"   LOC = AE19;
NET "epb_data<12>"   LOC = AE16;
NET "epb_data<11>"   LOC = AH19;
NET "epb_data<10>"   LOC = AF16;
NET "epb_data<9>"    LOC = AD20;
NET "epb_data<8>"    LOC = AE17;
NET "epb_data<7>"    LOC = AH12;
NET "epb_data<6>"    LOC = AH20;
NET "epb_data<5>"    LOC = AG13;
NET "epb_data<4>"    LOC = AE21;
NET "epb_data<3>"    LOC = AG22;
NET "epb_data<2>"    LOC = AH13;
NET "epb_data<1>"    LOC = AH22;
NET "epb_data<0>"    LOC = AH14;
# transparent endian change
NET "epb_addr<0>"    LOC = AE23;
NET "epb_addr<1>"    LOC = AE22;
NET "epb_addr<2>"    LOC = AG18;
NET "epb_addr<3>"    LOC = AG12;
NET "epb_addr<4>"    LOC = AG15;
NET "epb_addr<5>"    LOC = AG23;
NET "epb_addr<6>"    LOC = AF19;
NET "epb_addr<7>"    LOC = AE12;
NET "epb_addr<8>"    LOC = AG16;
NET "epb_addr<9>"    LOC = AF13;
NET "epb_addr<10>"   LOC = AG20;
NET "epb_addr<11>"   LOC = AF23;
NET "epb_addr<12>"   LOC = AH17;
NET "epb_addr<13>"   LOC = AH15;
NET "epb_addr<14>"   LOC = L20;
NET "epb_addr<15>"   LOC = J22;
NET "epb_addr<16>"   LOC = H22;
NET "epb_addr<17>"   LOC = L15;
NET "epb_addr<18>"   LOC = L16;
NET "epb_addr<19>"   LOC = K22;
NET "epb_addr<20>"   LOC = K21;
NET "epb_addr<21>"   LOC = K16;
NET "epb_addr<22>"   LOC = J15;
# EPB multi purpose pins
NET "epb_addr_gp<0>" LOC = L21; # DMA_REQ_2
NET "epb_addr_gp<1>" LOC = G22; # DMA_ACK_2
NET "epb_addr_gp<2>" LOC = K23; # EOT_TC_2
NET "epb_addr_gp<3>" LOC = K14; # DMA_REQ_3
NET "epb_addr_gp<4>" LOC = L14; # DMA_ACK_3
NET "epb_addr_gp<5>" LOC = J12; # EOT_TC_3
NET "epb_cs_n"       LOC = K13;
NET "epb_be_n<1>"    LOC = AF18;
NET "epb_be_n<0>"    LOC = AF14;
NET "epb_r_w_n"      LOC = AF20;
NET "epb_oe_n"       LOC = AF21;
#NET "epb_blast_n"    LOC = H23;
NET "epb_rdy"        LOC = K12;
NET "epb_clk_buf"    LOC = H12;

#
# MGT signals
#

# Clock on tile 7
NET "mgt_ref_clk_top_n"    LOC = C8;
NET "mgt_ref_clk_top_p"    LOC = D8;

# Clock on tile 3
NET "mgt_ref_clk_bottom_n" LOC = Y3;
NET "mgt_ref_clk_bottom_p" LOC = Y4;

# Tile 7
NET "mgt_rx_top_1_n<1>"    LOC = A7;
NET "mgt_rx_top_1_p<1>"    LOC = A6;
NET "mgt_rx_top_1_n<0>"    LOC = A8;
NET "mgt_rx_top_1_p<0>"    LOC = A9;
NET "mgt_tx_top_1_n<1>"    LOC = B6;
NET "mgt_tx_top_1_p<1>"    LOC = B5;
NET "mgt_tx_top_1_n<0>"    LOC = B9;
NET "mgt_tx_top_1_p<0>"    LOC = B10;
# Tile 6
NET "mgt_rx_top_1_n<3>"    LOC = C1;
NET "mgt_rx_top_1_p<3>"    LOC = D1;
NET "mgt_rx_top_1_n<2>"    LOC = A2;
NET "mgt_rx_top_1_p<2>"    LOC = A3;
NET "mgt_tx_top_1_n<3>"    LOC = D2;
NET "mgt_tx_top_1_p<3>"    LOC = E2;
NET "mgt_tx_top_1_n<2>"    LOC = B3;
NET "mgt_tx_top_1_p<2>"    LOC = B4;
# Tile 5
NET "mgt_rx_top_0_n<1>"    LOC = J1;
NET "mgt_rx_top_0_p<1>"    LOC = K1;
NET "mgt_rx_top_0_n<0>"    LOC = H1;
NET "mgt_rx_top_0_p<0>"    LOC = G1;
NET "mgt_tx_top_0_n<1>"    LOC = K2;
NET "mgt_tx_top_0_p<1>"    LOC = L2;
NET "mgt_tx_top_0_n<0>"    LOC = G2;
NET "mgt_tx_top_0_p<0>"    LOC = F2;
# Tile 4
NET "mgt_rx_top_0_n<3>"    LOC = R1;
NET "mgt_rx_top_0_p<3>"    LOC = T1;
NET "mgt_rx_top_0_n<2>"    LOC = P1;
NET "mgt_rx_top_0_p<2>"    LOC = N1;
NET "mgt_tx_top_0_n<3>"    LOC = T2;
NET "mgt_tx_top_0_p<3>"    LOC = U2;
NET "mgt_tx_top_0_n<2>"    LOC = N2;
NET "mgt_tx_top_0_p<2>"    LOC = M2;
# Tile 3
NET "mgt_rx_bottom_1_n<1>" LOC = AA1;
NET "mgt_rx_bottom_1_p<1>" LOC = AB1;
NET "mgt_rx_bottom_1_n<0>" LOC = Y1;
NET "mgt_rx_bottom_1_p<0>" LOC = W1;
NET "mgt_tx_bottom_1_n<1>" LOC = AB2;
NET "mgt_tx_bottom_1_p<1>" LOC = AC2;
NET "mgt_tx_bottom_1_n<0>" LOC = W2;
NET "mgt_tx_bottom_1_p<0>" LOC = V2;
# Tile 2
NET "mgt_rx_bottom_1_n<3>" LOC = AG1;
NET "mgt_rx_bottom_1_p<3>" LOC = AH1;
NET "mgt_rx_bottom_1_n<2>" LOC = AF1;
NET "mgt_rx_bottom_1_p<2>" LOC = AE1;
NET "mgt_tx_bottom_1_n<3>" LOC = AH2;
NET "mgt_tx_bottom_1_p<3>" LOC = AJ2;
NET "mgt_tx_bottom_1_n<2>" LOC = AE2;
NET "mgt_tx_bottom_1_p<2>" LOC = AD2;
# Tile 1
NET "mgt_rx_bottom_0_n<1>" LOC = AP2;
NET "mgt_rx_bottom_0_p<1>" LOC = AP3;
NET "mgt_rx_bottom_0_n<0>" LOC = AM1;
NET "mgt_rx_bottom_0_p<0>" LOC = AL1;
NET "mgt_tx_bottom_0_n<1>" LOC = AN3;
NET "mgt_tx_bottom_0_p<1>" LOC = AN4;
NET "mgt_tx_bottom_0_n<0>" LOC = AL2;
NET "mgt_tx_bottom_0_p<0>" LOC = AK2;
# Tile 0
NET "mgt_rx_bottom_0_n<3>" LOC = AP8;
NET "mgt_rx_bottom_0_p<3>" LOC = AP9;
NET "mgt_rx_bottom_0_n<2>" LOC = AP7;
NET "mgt_rx_bottom_0_p<2>" LOC = AP6;
NET "mgt_tx_bottom_0_n<3>" LOC = AN9;
NET "mgt_tx_bottom_0_p<3>" LOC = AN10;
NET "mgt_tx_bottom_0_n<2>" LOC = AN6;
NET "mgt_tx_bottom_0_p<2>" LOC = AN5;

#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc0')#NET adc0_adc3wire_clk       LOC = F28  ;
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc0')#NET adc0_adc3wire_data      LOC = D32  ;
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc0')#NET adc0_adc3wire_strobe    LOC = C32  ;
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc0')#NET adc0_modepin            LOC = E28  ;
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc0')#
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc1')#NET adc1_adc3wire_clk       LOC = AE32 ;
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc1')#NET adc1_adc3wire_data      LOC = AD34 ;
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc1')#NET adc1_adc3wire_strobe    LOC = AC34 ;
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc1')#NET adc1_modepin            LOC = AD32 ;
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc1')#
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc0')##INST opb_adccontroller_0/opb_adccontroller_0/USER_LOGIC_I/FD_ADC0_HALF_R LOC   = SLICE_X68Y88;
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc1')##INST opb_adccontroller_0/opb_adccontroller_0/USER_LOGIC_I/FD_ADC0_HALF_R BEL   = FFY;
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc0')##INST opb_adccontroller_0/opb_adccontroller_0/USER_LOGIC_I/FD_ADC1_ADC0   LOC   = SLICE_X66Y88;
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc1')##INST opb_adccontroller_0/opb_adccontroller_0/USER_LOGIC_I/FD_ADC1_ADC0   BEL   = FFY;
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc0')##NET  opb_adccontroller_0/opb_adccontroller_0/USER_LOGIC_I/adc0_toggle_R  ROUTE = "{3;1;2vp50ff1152;99486c99!-1;4960;1544;S!0;-2075;-536!1;-1548;304!2;167;0;L!}";
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc1')##NET  opb_adccontroller_0/opb_adccontroller_0/USER_LOGIC_I/adc0_toggle_R  MAXDELAY = 350ps;
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc1')#
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc0')##INST opb_adccontroller_0/opb_adccontroller_0/USER_LOGIC_I/FD_ADC1_HALF_R LOC   = SLICE_X68Y86;
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc1')##INST opb_adccontroller_0/opb_adccontroller_0/USER_LOGIC_I/FD_ADC1_HALF_R BEL   = FFY;
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc0')##INST opb_adccontroller_0/opb_adccontroller_0/USER_LOGIC_I/FD_ADC0_ADC1   LOC   = SLICE_X66Y86;
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc1')##INST opb_adccontroller_0/opb_adccontroller_0/USER_LOGIC_I/FD_ADC0_ADC1   BEL   = FFY;
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc0')##NET  opb_adccontroller_0/opb_adccontroller_0/USER_LOGIC_I/adc1_toggle_R  ROUTE = "{3;1;2vp50ff1152;1cdf0353!-1;4960;-2080;S!0;-2075;-536!1;-1548;304!2;167;0;L!}";
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc1')##NET  opb_adccontroller_0/opb_adccontroller_0/USER_LOGIC_I/adc1_toggle_R  MAXDELAY = 350ps;
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adn'),'adc1')#
