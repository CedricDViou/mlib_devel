#Please do not modify this file by hand
XmpVersion: 9.1.01
VerMgmt: 9.1.01
IntStyle: default
MHS File: system.mhs
MSS File: system.mss
NPL File: projnav/system.ise
Architecture: virtex2p
Device: xc2vp50
Package: ff1152
SpeedGrade: -7
UseProjNav: 0
PNImportBitFile: projnav/system.bit
PNImportBmmFile: implementation/system_bd.bmm
UserCmd1: 
UserCmd1Type: 0
UserCmd2: 
UserCmd2Type: 0
TopInst: system_i
GenSimTB: 0
InsertNoPads: 0
WarnForEAArch: 1
HdlLang: VHDL
Simulator: mti
SimModel: BEHAVIORAL
MixLangSim: 1
UcfFile: data/system.ucf
FpgaImpMode: 0
ShowLicenseDialog: 1
Processor: ppc405_1
BootLoop: 0
XmdStub: 0
Processor: ppc405_0
BootLoop: 0
XmdStub: 0
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #SwProj: bootloader
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #Processor: ppc405_0
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #Executable: bootloader/executable.elf
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #Source: bootloader/main.c
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #Source: bootloader/SD/SD_Card.c
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #Source: bootloader/SD/SD_Access.c
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #Source: bootloader/FAT/FAT32_Access.c
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #Source: bootloader/FAT/FAT32_Base.c
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #Source: bootloader/FAT/FAT32_Definitions.h
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #Source: bootloader/FAT/FatMisc.c
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #Source: bootloader/FAT/FileLib.c
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #Source: bootloader/FAT/FileString.c
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #Header: bootloader/SD/define.h
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #Header: bootloader/SD/SD_Access.h
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #Header: bootloader/FAT/FAT32_Access.h
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #Header: bootloader/FAT/define.h
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #Header: bootloader/FAT/FAT32_Base.h
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #Header: bootloader/FAT/FatMisc.h
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #Header: bootloader/FAT/FileLib.h
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #Header: bootloader/FAT/FileString.h
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #DefaultInit: EXECUTABLE
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #InitBram: 1
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #Active: 1
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #CompilerOptLevel: 4
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #GlobPtrOpt: 0
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #DebugSym: 0
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #AsmOpt: 
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #LinkOpt: 
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #ProgStart: 
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #StackSize: 
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #HeapSize: 
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #LinkerScript: bootloader/LinkerScript
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #ProgCCFlags: 
SwProj: Software
Processor: ppc405_1
Executable: Software/executable.elf
Source: Software/main.c
Source: Software/tinysh.c
Source: drivers/core_util.c
# <sources>
Header: Software/tinysh.h
Header: Software/tinysh_util.h
Header: drivers/core_util.h
# <headers>
DefaultInit: EXECUTABLE
InitBram: 1
Active: 1
CompilerOptLevel: 2
GlobPtrOpt: 0
DebugSym: 0
ProfileFlag: 0
ProgStart: 
StackSize: 
HeapSize: 
LinkerScript: Software/LinkerScript
ProgCCFlags: 
CompileInXps: 1
NonXpsApp: 0
